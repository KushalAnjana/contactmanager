{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextinputGroup.js","components/contacts/AddContacts.js","components/contacts/EditContacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Contacts","filter","Contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","showContactInfo","onDeleteClick","a","delete","contact","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","propType","PropTypes","object","isRequired","Fragment","key","TextinputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContacts","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContacts","updContact","match","params","put","Header","branding","href","About","NotFound","test","console","log","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bbc1295c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Contact from \"./components/contacts/Contact\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        Contacts: state.Contacts.filter(\r\n          (Contact) => Contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        Contacts: [action.payload, ...state.Contacts],\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        Contacts: state.Contacts.map((Contact) =>\r\n          Contact.id === action.payload.id\r\n            ? (Contact = action.payload)\r\n            : Contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    Contacts: [],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ Contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = { showContactInfo: false };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3  \">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email:{email}</li>\r\n                  <li className=\"list-group-item\">Phone:{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propType = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { Contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-denager\">Contact</span> List\r\n              </h1>\r\n              {Contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextinputGroup = ({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nTextinputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\nTextinputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nexport default TextinputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextinputGroup from \"../layout/TextinputGroup\";\r\n\r\nimport uuid from \"react-uuid\";\r\nimport axios from \"axios\";\r\nclass AddContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextinputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextinputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextinputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContacts;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextinputGroup from \"../layout/TextinputGroup\";\r\n\r\nimport uuid from \"react-uuid\";\r\nimport axios from \"axios\";\r\nclass EditContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const Contact = res.data;\r\n    this.setState({\r\n      name: Contact.name,\r\n      email: Contact.email,\r\n      phone: Contact.phone,\r\n    });\r\n  }\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextinputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextinputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextinputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav.item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i>Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav.item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i>Add\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav.item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\n//const headingstyle = {\r\n//color: \"Red\",\r\n//fontSize: \"50px\",\r\n//};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry,that page dose not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass test extends Component {\r\n  state = {\r\n    test: \"test\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount...\");\r\n  }\r\n\r\n  //  componentWillMount() {\r\n  //  console.log(\"componentWillMount...\");\r\n  //}\r\n\r\n  //componentDidUpdate() {\r\n  // console.log(\"componentDidUpdate\");\r\n  //}\r\n\r\n  //componentWillUpdate() {\r\n  //console.log(\"componentWillUpdate\");\r\n  //}\r\n\r\n  //componentWillReceiveProps(nextProps, nextState) {\r\n  //console.log(\"componentWillReceiveProps\");\r\n  //}\r\n\r\n  //static getDerivedStateFromProps(nextProps, prevState) {\r\n  //return {\r\n  // test: \"something\",\r\n  //};\r\n\r\n  //getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //console.log(\"getSnapshotBeforeUpdate\");\r\n  //}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default test;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContacts from \"./components/contacts/AddContacts\";\nimport EditContacts from \"./components/contacts/EditContacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport test from \"./components/test/test\";\n\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContacts} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}